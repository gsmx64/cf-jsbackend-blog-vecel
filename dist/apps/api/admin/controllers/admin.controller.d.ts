import { PaginateQuery, Paginated } from 'nestjs-paginate';
import { UsersEntity } from '../../users/entities/users.entity';
import { CategoriesEntity } from '../../categories/entities/categories.entity';
import { PostsEntity } from '../../posts/entities/posts.entity';
import { CommentsEntity } from '../../comments/entities/comments.entity';
import { UserUpdateDTO } from '../../users/dto/user.update.dto';
import { CategoryCreateDTO } from '../../categories/dto/category.create.dto';
import { CategoryUpdateDTO } from '../../categories/dto/category.update.dto';
import { PostUpdateDTO } from '../../posts/dto/post.update.dto';
import { CommentUpdateDTO } from '../../comments/dto/comment.update.dto';
import { AdminService } from '../services/admin.service';
import { SettingsUpdateDTO } from '../../settings/dto/settings.update.dto';
export declare class AdminController {
    private readonly adminService;
    constructor(adminService: AdminService);
    updateUser(id: string, body: UserUpdateDTO, request: Request): Promise<import("typeorm").UpdateResult>;
    deleteUser(id: string): Promise<import("typeorm").DeleteResult>;
    findOneUser(id: string): Promise<UsersEntity>;
    findOwnProfile(request: Request): Promise<any>;
    findAllUsers(query: PaginateQuery): Promise<Paginated<UsersEntity>>;
    createCategory(body: CategoryCreateDTO): Promise<CategoriesEntity>;
    updateCategory(id: string, body: CategoryUpdateDTO): Promise<import("typeorm").UpdateResult>;
    deleteCategory(id: string): Promise<import("typeorm").DeleteResult>;
    findOneCategory(id: string): Promise<CategoriesEntity>;
    findAllCategories(query: PaginateQuery): Promise<Paginated<CategoriesEntity>>;
    updatePost(id: string, body: PostUpdateDTO): Promise<import("typeorm").UpdateResult>;
    deletePost(id: string): Promise<import("typeorm").DeleteResult>;
    findOnePost(id: string): Promise<PostsEntity>;
    findAllPosts(query: PaginateQuery): Promise<Paginated<PostsEntity>>;
    updateComment(id: string, body: CommentUpdateDTO): Promise<import("typeorm").UpdateResult>;
    deleteComment(id: string): Promise<import("typeorm").DeleteResult>;
    findOneComment(id: string): Promise<CommentsEntity>;
    findAllComments(query: PaginateQuery): Promise<Paginated<CommentsEntity>>;
    searchUsers(query: PaginateQuery): Promise<Paginated<UsersEntity>>;
    searchCategories(query: PaginateQuery): Promise<Paginated<CategoriesEntity>>;
    searchPosts(query: PaginateQuery): Promise<Paginated<PostsEntity>>;
    searchComments(query: PaginateQuery): Promise<Paginated<CommentsEntity>>;
    getSettings(): Promise<import("../../settings/entities/settings.entity").SettingsEntity>;
    updateSettings(body: SettingsUpdateDTO): Promise<import("typeorm").UpdateResult>;
}
